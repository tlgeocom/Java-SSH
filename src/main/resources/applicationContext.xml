<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>org.postgresql.Driver</value>
        </property>
        <property name="url">
            <value>jdbc:postgresql://localhost:5432/postgres?useSSL=false&amp;serverTimezone=GMT%2b8</value>
        </property>
        <property name="username">
            <value>postgres</value>
        </property>
        <property name="password">
            <value>postgres</value>
        </property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <!-- 数据库连接方言 -->
                <prop key="dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!-- 在控制台输出SQL语句 -->
                <prop key="hibernate.show_sql">true</prop>
                <!-- 格式化控制台输出的SQL语句 -->
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <!--Hibernate映射文件 -->
        <property name="mappingResources">
            <list>
                <value>mapping/User.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!-- Dao层配置 -->
    <bean id="userDao" class="com.pjb.ssh.dao.impl.UserDaoImpl">
        <!-- 注入SessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Biz层配置 -->
    <bean id="userBiz" class="com.pjb.ssh.biz.impl.UserBizImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <!-- Action层配置 -->
    <bean id="userAction" class="com.pjb.ssh.action.UserAction">
        <property name="userBiz" ref="userBiz"/>
    </bean>

    <!-- 定义事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 定义事务通知，需要指定一个事务管理器，然后在其属性中声明事务规则 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="all*" propagation="REQUIRED"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!-- 配置事务的代理 -->
    <aop:config>
        <!-- 定义一个切面 -->
        <aop:pointcut id="allManagerMethod" expression="execution(* com.pjb.ssh.biz.impl.*.*(..))"/>
        <!-- 将事务通知与切面组合 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/>
    </aop:config>
</beans>